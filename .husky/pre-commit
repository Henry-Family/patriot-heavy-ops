#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|jsx|ts|tsx)$' || true)

if [ -n "$STAGED_FILES" ]; then
  echo "Running ESLint on staged files..."
  docker-compose exec -T app npx eslint --fix $STAGED_FILES
  
  echo "Running Prettier on staged files..."
  docker-compose exec -T app npx prettier --write $STAGED_FILES
  
  echo "Running tests for related files..."
  docker-compose exec -T app npm test -- --bail --findRelatedTests --passWithNoTests $STAGED_FILES
  
  # Re-add files that may have been modified by linting/formatting
  git add $STAGED_FILES
fi

# Check for staged JSON/MD/YAML files
STAGED_CONFIG_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(json|md|yml|yaml)$' || true)

if [ -n "$STAGED_CONFIG_FILES" ]; then
  echo "Running Prettier on config files..."
  docker-compose exec -T app npx prettier --write $STAGED_CONFIG_FILES
  git add $STAGED_CONFIG_FILES
fi

# Ensure TypeScript compilation passes for staged files only
if [ -n "$STAGED_FILES" ]; then
  echo "Checking TypeScript compilation for staged files..."
  docker-compose exec -T app npx tsc --noEmit $STAGED_FILES || echo "Warning: TypeScript errors found in staged files"
fi

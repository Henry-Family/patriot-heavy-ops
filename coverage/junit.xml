<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="39" failures="0" errors="0" time="10.505">
  <testsuite name="AuthService" errors="0" failures="0" skipped="0" timestamp="2025-09-24T19:17:04" time="0.465" tests="26">
    <testcase classname="AuthService constructor should initialize with AuthService name" name="AuthService constructor should initialize with AuthService name" time="0.005">
    </testcase>
    <testcase classname="AuthService authenticate should authenticate user with valid credentials" name="AuthService authenticate should authenticate user with valid credentials" time="0.003">
    </testcase>
    <testcase classname="AuthService authenticate should fail authentication with invalid email" name="AuthService authenticate should fail authentication with invalid email" time="0.019">
    </testcase>
    <testcase classname="AuthService authenticate should fail authentication with invalid password" name="AuthService authenticate should fail authentication with invalid password" time="0.02">
    </testcase>
    <testcase classname="AuthService authenticate should fail authentication when user has no password" name="AuthService authenticate should fail authentication when user has no password" time="0.002">
    </testcase>
    <testcase classname="AuthService authenticate should validate required credentials" name="AuthService authenticate should validate required credentials" time="0.002">
    </testcase>
    <testcase classname="AuthService authenticate should log authentication attempts" name="AuthService authenticate should log authentication attempts" time="0.001">
    </testcase>
    <testcase classname="AuthService register should register new user successfully" name="AuthService register should register new user successfully" time="0.002">
    </testcase>
    <testcase classname="AuthService register should fail registration if user already exists" name="AuthService register should fail registration if user already exists" time="0.001">
    </testcase>
    <testcase classname="AuthService register should validate required registration data" name="AuthService register should validate required registration data" time="0.001">
    </testcase>
    <testcase classname="AuthService register should handle registration with minimal data" name="AuthService register should handle registration with minimal data" time="0">
    </testcase>
    <testcase classname="AuthService getUserById should get user by ID successfully" name="AuthService getUserById should get user by ID successfully" time="0.001">
    </testcase>
    <testcase classname="AuthService getUserById should fail when user not found" name="AuthService getUserById should fail when user not found" time="0.002">
    </testcase>
    <testcase classname="AuthService getUserById should validate required userId" name="AuthService getUserById should validate required userId" time="0.001">
    </testcase>
    <testcase classname="AuthService getUserByEmail should get user by email successfully" name="AuthService getUserByEmail should get user by email successfully" time="0.001">
    </testcase>
    <testcase classname="AuthService getUserByEmail should fail when user not found" name="AuthService getUserByEmail should fail when user not found" time="0.001">
    </testcase>
    <testcase classname="AuthService updateUser should update user successfully" name="AuthService updateUser should update user successfully" time="0">
    </testcase>
    <testcase classname="AuthService updateUser should validate required userId" name="AuthService updateUser should validate required userId" time="0">
    </testcase>
    <testcase classname="AuthService changePassword should change password successfully" name="AuthService changePassword should change password successfully" time="0">
    </testcase>
    <testcase classname="AuthService changePassword should fail with incorrect current password" name="AuthService changePassword should fail with incorrect current password" time="0.001">
    </testcase>
    <testcase classname="AuthService changePassword should fail when user not found" name="AuthService changePassword should fail when user not found" time="0.001">
    </testcase>
    <testcase classname="AuthService validateSessionData should validate correct session data" name="AuthService validateSessionData should validate correct session data" time="0.002">
    </testcase>
    <testcase classname="AuthService validateSessionData should reject invalid session data" name="AuthService validateSessionData should reject invalid session data" time="0.001">
    </testcase>
    <testcase classname="AuthService validateAuthUser should validate correct auth user" name="AuthService validateAuthUser should validate correct auth user" time="0">
    </testcase>
    <testcase classname="AuthService validateAuthUser should reject invalid auth user data" name="AuthService validateAuthUser should reject invalid auth user data" time="0">
    </testcase>
    <testcase classname="AuthService validateAuthUser should accept null name and image" name="AuthService validateAuthUser should accept null name and image" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ServiceRequestForm Geocoding Integration" errors="0" failures="0" skipped="0" timestamp="2025-09-24T19:17:04" time="9.708" tests="13">
    <testcase classname="ServiceRequestForm Geocoding Integration Address Search Integration should use geocoding service for address search" name="ServiceRequestForm Geocoding Integration Address Search Integration should use geocoding service for address search" time="1.031">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Address Search Integration should display address suggestions from geocoding service" name="ServiceRequestForm Geocoding Integration Address Search Integration should display address suggestions from geocoding service" time="0.76">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Address Search Integration should select address suggestion and update form" name="ServiceRequestForm Geocoding Integration Address Search Integration should select address suggestion and update form" time="0.878">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Address Search Integration should handle keyboard navigation for address selection" name="ServiceRequestForm Geocoding Integration Address Search Integration should handle keyboard navigation for address selection" time="0.794">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Address Search Integration should not search for queries less than 3 characters" name="ServiceRequestForm Geocoding Integration Address Search Integration should not search for queries less than 3 characters" time="0.106">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Address Search Integration should show loading indicator during search" name="ServiceRequestForm Geocoding Integration Address Search Integration should show loading indicator during search" time="0.717">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Error Handling should handle geocoding service errors gracefully" name="ServiceRequestForm Geocoding Integration Error Handling should handle geocoding service errors gracefully" time="0.572">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Error Handling should handle unexpected errors gracefully" name="ServiceRequestForm Geocoding Integration Error Handling should handle unexpected errors gracefully" time="0.757">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Error Handling should handle rate limiting errors" name="ServiceRequestForm Geocoding Integration Error Handling should handle rate limiting errors" time="0.509">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Service Integration should get geocoding service from ServiceFactory" name="ServiceRequestForm Geocoding Integration Service Integration should get geocoding service from ServiceFactory" time="0.087">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Service Integration should pass correct options to geocoding service" name="ServiceRequestForm Geocoding Integration Service Integration should pass correct options to geocoding service" time="0.909">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Service Integration should handle empty results from service" name="ServiceRequestForm Geocoding Integration Service Integration should handle empty results from service" time="1.095">
    </testcase>
    <testcase classname="ServiceRequestForm Geocoding Integration Debouncing should debounce address search requests" name="ServiceRequestForm Geocoding Integration Debouncing should debounce address search requests" time="0.845">
    </testcase>
  </testsuite>
</testsuites>
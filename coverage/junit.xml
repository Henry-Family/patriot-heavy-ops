<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="472" failures="0" errors="0" time="10.616">
  <testsuite name="NextAuth configuration" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="0.839" tests="17">
    <testcase classname="NextAuth configuration authOptions configuration should have correct session strategy" name="NextAuth configuration authOptions configuration should have correct session strategy" time="0.004">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have correct pages configuration" name="NextAuth configuration authOptions configuration should have correct pages configuration" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have credentials provider configured" name="NextAuth configuration authOptions configuration should have credentials provider configured" time="0.001">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have proper cookie security settings" name="NextAuth configuration authOptions configuration should have proper cookie security settings" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have secure cookies in production" name="NextAuth configuration authOptions configuration should have secure cookies in production" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have debug enabled in development" name="NextAuth configuration authOptions configuration should have debug enabled in development" time="0">
    </testcase>
    <testcase classname="NextAuth configuration provider configuration should have credentials provider with correct name" name="NextAuth configuration provider configuration should have credentials provider with correct name" time="0">
    </testcase>
    <testcase classname="NextAuth configuration provider configuration should have email and password credentials configured" name="NextAuth configuration provider configuration should have email and password credentials configured" time="0.001">
    </testcase>
    <testcase classname="NextAuth configuration provider configuration should have authorize function defined" name="NextAuth configuration provider configuration should have authorize function defined" time="0">
    </testcase>
    <testcase classname="NextAuth configuration callbacks configuration should have JWT callback defined" name="NextAuth configuration callbacks configuration should have JWT callback defined" time="0">
    </testcase>
    <testcase classname="NextAuth configuration callbacks configuration should have session callback defined" name="NextAuth configuration callbacks configuration should have session callback defined" time="0">
    </testcase>
    <testcase classname="NextAuth configuration session callback functionality should return session with user data from token" name="NextAuth configuration session callback functionality should return session with user data from token" time="0.001">
    </testcase>
    <testcase classname="NextAuth configuration session callback functionality should handle missing token data gracefully" name="NextAuth configuration session callback functionality should handle missing token data gracefully" time="0">
    </testcase>
    <testcase classname="NextAuth configuration session callback functionality should preserve session structure" name="NextAuth configuration session callback functionality should preserve session structure" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authorize function basic validation should return null for missing credentials" name="NextAuth configuration authorize function basic validation should return null for missing credentials" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authorize function basic validation should return null for missing email" name="NextAuth configuration authorize function basic validation should return null for missing email" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authorize function basic validation should return null for missing password" name="NextAuth configuration authorize function basic validation should return null for missing password" time="0">
    </testcase>
  </testsuite>
  <testsuite name="session management" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="0.863" tests="23">
    <testcase classname="session management getCurrentUser should return user when session exists" name="session management getCurrentUser should return user when session exists" time="0.004">
    </testcase>
    <testcase classname="session management getCurrentUser should return undefined when no session exists" name="session management getCurrentUser should return undefined when no session exists" time="0.001">
    </testcase>
    <testcase classname="session management getCurrentUser should return undefined when session exists but no user" name="session management getCurrentUser should return undefined when session exists but no user" time="0">
    </testcase>
    <testcase classname="session management getCurrentUser should handle session with partial user data" name="session management getCurrentUser should handle session with partial user data" time="0">
    </testcase>
    <testcase classname="session management getCurrentUserWithRole should return user with role when session exists" name="session management getCurrentUserWithRole should return user with role when session exists" time="0">
    </testcase>
    <testcase classname="session management getCurrentUserWithRole should return null when no session exists" name="session management getCurrentUserWithRole should return null when no session exists" time="0">
    </testcase>
    <testcase classname="session management getCurrentUserWithRole should return null when session exists but no user" name="session management getCurrentUserWithRole should return null when session exists but no user" time="0">
    </testcase>
    <testcase classname="session management getCurrentUserWithRole should default role to USER when role is missing" name="session management getCurrentUserWithRole should default role to USER when role is missing" time="0.001">
    </testcase>
    <testcase classname="session management getCurrentUserWithRole should preserve existing role when present" name="session management getCurrentUserWithRole should preserve existing role when present" time="0">
    </testcase>
    <testcase classname="session management requireAuth should return user when authenticated" name="session management requireAuth should return user when authenticated" time="0">
    </testcase>
    <testcase classname="session management requireAuth should throw error when not authenticated" name="session management requireAuth should throw error when not authenticated" time="0.009">
    </testcase>
    <testcase classname="session management requireAuth should throw error when session exists but no user" name="session management requireAuth should throw error when session exists but no user" time="0">
    </testcase>
    <testcase classname="session management requireRole should return user when user has required role (string)" name="session management requireRole should return user when user has required role (string)" time="0">
    </testcase>
    <testcase classname="session management requireRole should return user when user has one of required roles (array)" name="session management requireRole should return user when user has one of required roles (array)" time="0">
    </testcase>
    <testcase classname="session management requireRole should throw error when user does not have required role (string)" name="session management requireRole should throw error when user does not have required role (string)" time="0.001">
    </testcase>
    <testcase classname="session management requireRole should throw error when user does not have any required roles (array)" name="session management requireRole should throw error when user does not have any required roles (array)" time="0">
    </testcase>
    <testcase classname="session management requireRole should throw error when not authenticated" name="session management requireRole should throw error when not authenticated" time="0.001">
    </testcase>
    <testcase classname="session management requireRole should handle user with missing role (defaults to USER)" name="session management requireRole should handle user with missing role (defaults to USER)" time="0">
    </testcase>
    <testcase classname="session management requireRole should reject user with missing role when requiring higher privileges" name="session management requireRole should reject user with missing role when requiring higher privileges" time="0.001">
    </testcase>
    <testcase classname="session management requireRole should handle empty array of required roles" name="session management requireRole should handle empty array of required roles" time="0">
    </testcase>
    <testcase classname="session management error handling should handle getServerSession throwing an error" name="session management error handling should handle getServerSession throwing an error" time="0.001">
    </testcase>
    <testcase classname="session management error handling should handle malformed session data" name="session management error handling should handle malformed session data" time="0.001">
    </testcase>
    <testcase classname="session management integration scenarios should work with realistic session data" name="session management integration scenarios should work with realistic session data" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ServiceRequestCreateButton" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="0.971" tests="22">
    <testcase classname="ServiceRequestCreateButton Button Rendering should render the create button with correct text and icon" name="ServiceRequestCreateButton Button Rendering should render the create button with correct text and icon" time="0.114">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Rendering should render with custom className" name="ServiceRequestCreateButton Button Rendering should render with custom className" time="0.01">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Rendering should render with custom variant" name="ServiceRequestCreateButton Button Rendering should render with custom variant" time="0.012">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Rendering should accept additional button props" name="ServiceRequestCreateButton Button Rendering should accept additional button props" time="0.005">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Interaction should navigate to create page when clicked" name="ServiceRequestCreateButton Button Interaction should navigate to create page when clicked" time="0.03">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Interaction should show loading state when clicked" name="ServiceRequestCreateButton Button Interaction should show loading state when clicked" time="0.017">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Interaction should disable button during loading" name="ServiceRequestCreateButton Button Interaction should disable button during loading" time="0.018">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button Interaction should show spinner icon during loading" name="ServiceRequestCreateButton Button Interaction should show spinner icon during loading" time="0.014">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Error Handling should show error toast when navigation fails" name="ServiceRequestCreateButton Error Handling should show error toast when navigation fails" time="0.021">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Error Handling should handle different types of navigation errors" name="ServiceRequestCreateButton Error Handling should handle different types of navigation errors" time="0.053">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button States should maintain loading state until navigation completes" name="ServiceRequestCreateButton Button States should maintain loading state until navigation completes" time="0.012">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Button States should not allow multiple clicks during loading" name="ServiceRequestCreateButton Button States should not allow multiple clicks during loading" time="0.035">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Accessibility should have proper button semantics" name="ServiceRequestCreateButton Accessibility should have proper button semantics" time="0.004">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Accessibility should indicate loading state to screen readers" name="ServiceRequestCreateButton Accessibility should indicate loading state to screen readers" time="0.013">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Accessibility should maintain focus management" name="ServiceRequestCreateButton Accessibility should maintain focus management" time="0.022">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Icon Display should show add icon when not loading" name="ServiceRequestCreateButton Icon Display should show add icon when not loading" time="0.009">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Icon Display should switch to spinner icon when loading" name="ServiceRequestCreateButton Icon Display should switch to spinner icon when loading" time="0.02">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Component Variants should apply default variant styling" name="ServiceRequestCreateButton Component Variants should apply default variant styling" time="0.002">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Component Variants should apply custom variant styling" name="ServiceRequestCreateButton Component Variants should apply custom variant styling" time="0.002">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Component Variants should combine variant with loading classes" name="ServiceRequestCreateButton Component Variants should combine variant with loading classes" time="0.016">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Edge Cases should handle undefined router push result" name="ServiceRequestCreateButton Edge Cases should handle undefined router push result" time="0.02">
    </testcase>
    <testcase classname="ServiceRequestCreateButton Edge Cases should handle router push returning true" name="ServiceRequestCreateButton Edge Cases should handle router push returning true" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Utility Functions" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:32" time="0.324" tests="33">
    <testcase classname="Utility Functions cn function (className merger) should merge simple class names" name="Utility Functions cn function (className merger) should merge simple class names" time="0.013">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle conditional classes" name="Utility Functions cn function (className merger) should handle conditional classes" time="0.001">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should merge conflicting Tailwind classes correctly" name="Utility Functions cn function (className merger) should merge conflicting Tailwind classes correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle arrays of classes" name="Utility Functions cn function (className merger) should handle arrays of classes" time="0">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle objects with conditional classes" name="Utility Functions cn function (className merger) should handle objects with conditional classes" time="0">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle mixed input types" name="Utility Functions cn function (className merger) should handle mixed input types" time="0">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle empty inputs" name="Utility Functions cn function (className merger) should handle empty inputs" time="0.001">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle complex Tailwind class conflicts" name="Utility Functions cn function (className merger) should handle complex Tailwind class conflicts" time="0">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should preserve non-conflicting classes" name="Utility Functions cn function (className merger) should preserve non-conflicting classes" time="0">
    </testcase>
    <testcase classname="Utility Functions cn function (className merger) should handle whitespace correctly" name="Utility Functions cn function (className merger) should handle whitespace correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions formatDate function should format date strings correctly" name="Utility Functions formatDate function should format date strings correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions formatDate function should format timestamp numbers correctly" name="Utility Functions formatDate function should format timestamp numbers correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions formatDate function should handle ISO date strings" name="Utility Functions formatDate function should handle ISO date strings" time="0">
    </testcase>
    <testcase classname="Utility Functions formatDate function should handle various date string formats" name="Utility Functions formatDate function should handle various date string formats" time="0">
    </testcase>
    <testcase classname="Utility Functions formatDate function should handle edge case dates" name="Utility Functions formatDate function should handle edge case dates" time="0">
    </testcase>
    <testcase classname="Utility Functions formatDate function should handle invalid dates gracefully" name="Utility Functions formatDate function should handle invalid dates gracefully" time="0.001">
    </testcase>
    <testcase classname="Utility Functions formatDate function should use correct locale and format options" name="Utility Functions formatDate function should use correct locale and format options" time="0">
    </testcase>
    <testcase classname="Utility Functions formatDate function should handle different numeric inputs" name="Utility Functions formatDate function should handle different numeric inputs" time="0">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should create absolute URLs with base URL" name="Utility Functions absoluteUrl function should create absolute URLs with base URL" time="0.031">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should handle paths without leading slash by adding one" name="Utility Functions absoluteUrl function should handle paths without leading slash by adding one" time="0">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should handle empty and root paths" name="Utility Functions absoluteUrl function should handle empty and root paths" time="0">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should handle paths with query parameters" name="Utility Functions absoluteUrl function should handle paths with query parameters" time="0">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should handle paths with fragments" name="Utility Functions absoluteUrl function should handle paths with fragments" time="0">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should handle complex paths" name="Utility Functions absoluteUrl function should handle complex paths" time="0">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should handle special characters in paths" name="Utility Functions absoluteUrl function should handle special characters in paths" time="0.001">
    </testcase>
    <testcase classname="Utility Functions absoluteUrl function should not double-encode already encoded paths" name="Utility Functions absoluteUrl function should not double-encode already encoded paths" time="0">
    </testcase>
    <testcase classname="Utility Functions integration tests should work together in realistic scenarios" name="Utility Functions integration tests should work together in realistic scenarios" time="0.068">
    </testcase>
    <testcase classname="Utility Functions integration tests should handle edge cases in combination" name="Utility Functions integration tests should handle edge cases in combination" time="0.003">
    </testcase>
    <testcase classname="Utility Functions performance and memory should handle large numbers of class names efficiently" name="Utility Functions performance and memory should handle large numbers of class names efficiently" time="0.003">
    </testcase>
    <testcase classname="Utility Functions performance and memory should handle repeated calls without memory leaks" name="Utility Functions performance and memory should handle repeated calls without memory leaks" time="0.116">
    </testcase>
    <testcase classname="Utility Functions type safety and validation should handle various input types for cn" name="Utility Functions type safety and validation should handle various input types for cn" time="0">
    </testcase>
    <testcase classname="Utility Functions type safety and validation should handle various input types for formatDate" name="Utility Functions type safety and validation should handle various input types for formatDate" time="0">
    </testcase>
    <testcase classname="Utility Functions type safety and validation should handle various input types for absoluteUrl" name="Utility Functions type safety and validation should handle various input types for absoluteUrl" time="0">
    </testcase>
  </testsuite>
  <testsuite name="UserAuthForm Snapshots" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:32" time="0.364" tests="2">
    <testcase classname="UserAuthForm Snapshots matches snapshot in login mode" name="UserAuthForm Snapshots matches snapshot in login mode" time="0.052">
    </testcase>
    <testcase classname="UserAuthForm Snapshots matches snapshot in register mode" name="UserAuthForm Snapshots matches snapshot in register mode" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="/api/users/stripe" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:32" time="0.14" tests="13">
    <testcase classname="/api/users/stripe GET /api/users/stripe Authentication should return 403 when no session exists" name="/api/users/stripe GET /api/users/stripe Authentication should return 403 when no session exists" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Authentication should return 403 when session has no user" name="/api/users/stripe GET /api/users/stripe Authentication should return 403 when session has no user" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Authentication should return 403 when user has no email" name="/api/users/stripe GET /api/users/stripe Authentication should return 403 when user has no email" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Pro Plan - Billing Portal should create billing portal session for pro users" name="/api/users/stripe GET /api/users/stripe Pro Plan - Billing Portal should create billing portal session for pro users" time="0.001">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Pro Plan - Billing Portal should handle billing portal creation errors" name="/api/users/stripe GET /api/users/stripe Pro Plan - Billing Portal should handle billing portal creation errors" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Free Plan - Checkout Session should create checkout session for free users" name="/api/users/stripe GET /api/users/stripe Free Plan - Checkout Session should create checkout session for free users" time="0.001">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Free Plan - Checkout Session should create checkout session for pro users without customer ID" name="/api/users/stripe GET /api/users/stripe Free Plan - Checkout Session should create checkout session for pro users without customer ID" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Free Plan - Checkout Session should handle checkout session creation errors" name="/api/users/stripe GET /api/users/stripe Free Plan - Checkout Session should handle checkout session creation errors" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Error Handling should handle subscription plan retrieval errors" name="/api/users/stripe GET /api/users/stripe Error Handling should handle subscription plan retrieval errors" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Error Handling should handle session retrieval errors" name="/api/users/stripe GET /api/users/stripe Error Handling should handle session retrieval errors" time="0.008">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Error Handling should handle unexpected errors gracefully" name="/api/users/stripe GET /api/users/stripe Error Handling should handle unexpected errors gracefully" time="0">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Edge Cases should handle empty stripe customer ID" name="/api/users/stripe GET /api/users/stripe Edge Cases should handle empty stripe customer ID" time="0.001">
    </testcase>
    <testcase classname="/api/users/stripe GET /api/users/stripe Edge Cases should handle special characters in user email" name="/api/users/stripe GET /api/users/stripe Edge Cases should handle special characters in user email" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CardSkeleton Snapshots" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.061" tests="1">
    <testcase classname="CardSkeleton Snapshots matches snapshot" name="CardSkeleton Snapshots matches snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Service Request Validation Schemas" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.101" tests="40">
    <testcase classname="Service Request Validation Schemas serviceRequestSchema should validate complete valid service request data" name="Service Request Validation Schemas serviceRequestSchema should validate complete valid service request data" time="0.002">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema title validation should accept valid titles" name="Service Request Validation Schemas serviceRequestSchema title validation should accept valid titles" time="0.008">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema title validation should reject empty title" name="Service Request Validation Schemas serviceRequestSchema title validation should reject empty title" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema title validation should reject title exceeding 200 characters" name="Service Request Validation Schemas serviceRequestSchema title validation should reject title exceeding 200 characters" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema description validation should accept valid descriptions" name="Service Request Validation Schemas serviceRequestSchema description validation should accept valid descriptions" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema description validation should reject description exceeding 1000 characters" name="Service Request Validation Schemas serviceRequestSchema description validation should reject description exceeding 1000 characters" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema contact information validation should validate contact name" name="Service Request Validation Schemas serviceRequestSchema contact information validation should validate contact name" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema contact information validation should validate contact email" name="Service Request Validation Schemas serviceRequestSchema contact information validation should validate contact email" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema contact information validation should validate contact phone" name="Service Request Validation Schemas serviceRequestSchema contact information validation should validate contact phone" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema contact information validation should validate optional company field" name="Service Request Validation Schemas serviceRequestSchema contact information validation should validate optional company field" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema job details validation should validate job site" name="Service Request Validation Schemas serviceRequestSchema job details validation should validate job site" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema job details validation should validate transport options" name="Service Request Validation Schemas serviceRequestSchema job details validation should validate transport options" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema job details validation should validate start date" name="Service Request Validation Schemas serviceRequestSchema job details validation should validate start date" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema job details validation should validate optional end date" name="Service Request Validation Schemas serviceRequestSchema job details validation should validate optional end date" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema equipment validation should validate equipment categories" name="Service Request Validation Schemas serviceRequestSchema equipment validation should validate equipment categories" time="0.002">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema equipment validation should validate equipment detail" name="Service Request Validation Schemas serviceRequestSchema equipment validation should validate equipment detail" time="0.002">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate duration type" name="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate duration type" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate duration value" name="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate duration value" time="0.007">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate total hours" name="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate total hours" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate rate type" name="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate rate type" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate base rate" name="Service Request Validation Schemas serviceRequestSchema duration and pricing validation should validate base rate" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestSchema required fields validation should reject missing required fields" name="Service Request Validation Schemas serviceRequestSchema required fields validation should reject missing required fields" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestUpdateSchema should validate partial updates (all fields optional)" name="Service Request Validation Schemas serviceRequestUpdateSchema should validate partial updates (all fields optional)" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestUpdateSchema should validate status updates" name="Service Request Validation Schemas serviceRequestUpdateSchema should validate status updates" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestUpdateSchema should validate priority updates" name="Service Request Validation Schemas serviceRequestUpdateSchema should validate priority updates" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas serviceRequestUpdateSchema should validate monetary fields" name="Service Request Validation Schemas serviceRequestUpdateSchema should validate monetary fields" time="0.002">
    </testcase>
    <testcase classname="Service Request Validation Schemas statusChangeSchema should validate complete status change" name="Service Request Validation Schemas statusChangeSchema should validate complete status change" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas statusChangeSchema should validate minimal status change" name="Service Request Validation Schemas statusChangeSchema should validate minimal status change" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas statusChangeSchema should reject missing required fields" name="Service Request Validation Schemas statusChangeSchema should reject missing required fields" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas statusChangeSchema should validate status transitions" name="Service Request Validation Schemas statusChangeSchema should validate status transitions" time="0.003">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for HALF_DAY" name="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for HALF_DAY" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for FULL_DAY" name="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for FULL_DAY" time="0.002">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for MULTI_DAY" name="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for MULTI_DAY" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for WEEKLY" name="Service Request Validation Schemas helper functions calculateTotalHours should calculate hours for WEEKLY" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions calculateTotalHours should return default for invalid duration type" name="Service Request Validation Schemas helper functions calculateTotalHours should return default for invalid duration type" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions getDurationDisplayText should format HALF_DAY display text" name="Service Request Validation Schemas helper functions getDurationDisplayText should format HALF_DAY display text" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions getDurationDisplayText should format FULL_DAY display text" name="Service Request Validation Schemas helper functions getDurationDisplayText should format FULL_DAY display text" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions getDurationDisplayText should format MULTI_DAY display text" name="Service Request Validation Schemas helper functions getDurationDisplayText should format MULTI_DAY display text" time="0">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions getDurationDisplayText should format WEEKLY display text" name="Service Request Validation Schemas helper functions getDurationDisplayText should format WEEKLY display text" time="0.001">
    </testcase>
    <testcase classname="Service Request Validation Schemas helper functions getDurationDisplayText should handle invalid duration type" name="Service Request Validation Schemas helper functions getDurationDisplayText should handle invalid duration type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Permissions System" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.092" tests="44">
    <testcase classname="Permissions System ROLE_PERMISSIONS constant should have permissions for all roles" name="Permissions System ROLE_PERMISSIONS constant should have permissions for all roles" time="0.001">
    </testcase>
    <testcase classname="Permissions System ROLE_PERMISSIONS constant should have proper permission inheritance" name="Permissions System ROLE_PERMISSIONS constant should have proper permission inheritance" time="0.001">
    </testcase>
    <testcase classname="Permissions System ROLE_PERMISSIONS constant should have unique permissions per role level" name="Permissions System ROLE_PERMISSIONS constant should have unique permissions per role level" time="0.001">
    </testcase>
    <testcase classname="Permissions System hasPermission function should return true for valid role-permission combinations" name="Permissions System hasPermission function should return true for valid role-permission combinations" time="0">
    </testcase>
    <testcase classname="Permissions System hasPermission function should return false for invalid role-permission combinations" name="Permissions System hasPermission function should return false for invalid role-permission combinations" time="0.001">
    </testcase>
    <testcase classname="Permissions System hasPermission function should handle invalid permissions gracefully" name="Permissions System hasPermission function should handle invalid permissions gracefully" time="0">
    </testcase>
    <testcase classname="Permissions System hasPermission function should handle invalid roles gracefully" name="Permissions System hasPermission function should handle invalid roles gracefully" time="0">
    </testcase>
    <testcase classname="Permissions System getUserPermissions function should return correct permissions for each role" name="Permissions System getUserPermissions function should return correct permissions for each role" time="0.007">
    </testcase>
    <testcase classname="Permissions System getUserPermissions function should return empty array for invalid role" name="Permissions System getUserPermissions function should return empty array for invalid role" time="0">
    </testcase>
    <testcase classname="Permissions System getUserPermissions function should return arrays without duplicates" name="Permissions System getUserPermissions function should return arrays without duplicates" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function public and general routes should allow access to routes with no specific requirements" name="Permissions System canAccessRoute function public and general routes should allow access to routes with no specific requirements" time="0.003">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function public and general routes should allow access to undefined routes (public routes)" name="Permissions System canAccessRoute function public and general routes should allow access to undefined routes (public routes)" time="0.003">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function user-level routes should allow users to access basic dashboard routes" name="Permissions System canAccessRoute function user-level routes should allow users to access basic dashboard routes" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function user-level routes should prevent users from accessing higher-level routes" name="Permissions System canAccessRoute function user-level routes should prevent users from accessing higher-level routes" time="0.001">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function operator-level routes should allow operators to access operator routes" name="Permissions System canAccessRoute function operator-level routes should allow operators to access operator routes" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function operator-level routes should allow operators to access user routes (inheritance)" name="Permissions System canAccessRoute function operator-level routes should allow operators to access user routes (inheritance)" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function operator-level routes should prevent operators from accessing manager/admin routes" name="Permissions System canAccessRoute function operator-level routes should prevent operators from accessing manager/admin routes" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function manager-level routes should allow managers to access manager routes" name="Permissions System canAccessRoute function manager-level routes should allow managers to access manager routes" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function manager-level routes should allow managers to access lower-level routes (inheritance)" name="Permissions System canAccessRoute function manager-level routes should allow managers to access lower-level routes (inheritance)" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function manager-level routes should prevent managers from accessing admin routes" name="Permissions System canAccessRoute function manager-level routes should prevent managers from accessing admin routes" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function admin-level routes should allow admins to access all routes" name="Permissions System canAccessRoute function admin-level routes should allow admins to access all routes" time="0">
    </testcase>
    <testcase classname="Permissions System canAccessRoute function admin-level routes should allow admins to access all lower-level routes" name="Permissions System canAccessRoute function admin-level routes should allow admins to access all lower-level routes" time="0">
    </testcase>
    <testcase classname="Permissions System ROLE_HIERARCHY constant should have correct hierarchy order" name="Permissions System ROLE_HIERARCHY constant should have correct hierarchy order" time="0.001">
    </testcase>
    <testcase classname="Permissions System ROLE_HIERARCHY constant should have ascending values" name="Permissions System ROLE_HIERARCHY constant should have ascending values" time="0">
    </testcase>
    <testcase classname="Permissions System hasHigherRole function should return true for higher roles" name="Permissions System hasHigherRole function should return true for higher roles" time="0.001">
    </testcase>
    <testcase classname="Permissions System hasHigherRole function should return false for equal or lower roles" name="Permissions System hasHigherRole function should return false for equal or lower roles" time="0.001">
    </testcase>
    <testcase classname="Permissions System hasEqualOrHigherRole function should return true for equal roles" name="Permissions System hasEqualOrHigherRole function should return true for equal roles" time="0.001">
    </testcase>
    <testcase classname="Permissions System hasEqualOrHigherRole function should return true for higher roles" name="Permissions System hasEqualOrHigherRole function should return true for higher roles" time="0.002">
    </testcase>
    <testcase classname="Permissions System hasEqualOrHigherRole function should return false for lower roles" name="Permissions System hasEqualOrHigherRole function should return false for lower roles" time="0">
    </testcase>
    <testcase classname="Permissions System getLowerRoles function should return correct lower roles for each role" name="Permissions System getLowerRoles function should return correct lower roles for each role" time="0.001">
    </testcase>
    <testcase classname="Permissions System getLowerRoles function should return roles in correct order" name="Permissions System getLowerRoles function should return roles in correct order" time="0.001">
    </testcase>
    <testcase classname="Permissions System canManageUser function should allow admins to manage everyone" name="Permissions System canManageUser function should allow admins to manage everyone" time="0.001">
    </testcase>
    <testcase classname="Permissions System canManageUser function should allow managers to manage users and operators" name="Permissions System canManageUser function should allow managers to manage users and operators" time="0">
    </testcase>
    <testcase classname="Permissions System canManageUser function should not allow users and operators to manage others" name="Permissions System canManageUser function should not allow users and operators to manage others" time="0.001">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should return base routes for all roles" name="Permissions System getAvailableDashboardRoutes function should return base routes for all roles" time="0">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should return only base routes for USER role" name="Permissions System getAvailableDashboardRoutes function should return only base routes for USER role" time="0.001">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should return operator-specific routes for OPERATOR role" name="Permissions System getAvailableDashboardRoutes function should return operator-specific routes for OPERATOR role" time="0">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should return manager-specific routes for MANAGER role" name="Permissions System getAvailableDashboardRoutes function should return manager-specific routes for MANAGER role" time="0">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should return admin-specific routes for ADMIN role" name="Permissions System getAvailableDashboardRoutes function should return admin-specific routes for ADMIN role" time="0">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should return routes with proper structure" name="Permissions System getAvailableDashboardRoutes function should return routes with proper structure" time="0.006">
    </testcase>
    <testcase classname="Permissions System getAvailableDashboardRoutes function should have increasing route counts with higher roles" name="Permissions System getAvailableDashboardRoutes function should have increasing route counts with higher roles" time="0">
    </testcase>
    <testcase classname="Permissions System edge cases and error handling should handle undefined and null values gracefully" name="Permissions System edge cases and error handling should handle undefined and null values gracefully" time="0.001">
    </testcase>
    <testcase classname="Permissions System edge cases and error handling should handle empty strings gracefully" name="Permissions System edge cases and error handling should handle empty strings gracefully" time="0">
    </testcase>
    <testcase classname="Permissions System edge cases and error handling should be case sensitive for roles and permissions" name="Permissions System edge cases and error handling should be case sensitive for roles and permissions" time="0">
    </testcase>
  </testsuite>
  <testsuite name="/api/webhooks/stripe" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.063" tests="13">
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Webhook Signature Verification should return 400 when signature verification fails" name="/api/webhooks/stripe POST /api/webhooks/stripe Webhook Signature Verification should return 400 when signature verification fails" time="0.005">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Webhook Signature Verification should return 400 when STRIPE_WEBHOOK_SECRET is not configured" name="/api/webhooks/stripe POST /api/webhooks/stripe Webhook Signature Verification should return 400 when STRIPE_WEBHOOK_SECRET is not configured" time="0.001">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Webhook Signature Verification should verify webhook signature correctly" name="/api/webhooks/stripe POST /api/webhooks/stripe Webhook Signature Verification should verify webhook signature correctly" time="0">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe checkout.session.completed Event should handle checkout session completed successfully" name="/api/webhooks/stripe POST /api/webhooks/stripe checkout.session.completed Event should handle checkout session completed successfully" time="0">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe checkout.session.completed Event should handle subscription retrieval errors" name="/api/webhooks/stripe POST /api/webhooks/stripe checkout.session.completed Event should handle subscription retrieval errors" time="0.009">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe checkout.session.completed Event should handle database update errors" name="/api/webhooks/stripe POST /api/webhooks/stripe checkout.session.completed Event should handle database update errors" time="0.001">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe invoice.payment_succeeded Event should handle invoice payment succeeded successfully" name="/api/webhooks/stripe POST /api/webhooks/stripe invoice.payment_succeeded Event should handle invoice payment succeeded successfully" time="0">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe invoice.payment_succeeded Event should handle subscription renewal errors" name="/api/webhooks/stripe POST /api/webhooks/stripe invoice.payment_succeeded Event should handle subscription renewal errors" time="0">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Unsupported Event Types should handle unsupported event types gracefully" name="/api/webhooks/stripe POST /api/webhooks/stripe Unsupported Event Types should handle unsupported event types gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle missing metadata in checkout session" name="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle missing metadata in checkout session" time="0">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle missing subscription ID" name="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle missing subscription ID" time="0">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle empty request body" name="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle empty request body" time="0.004">
    </testcase>
    <testcase classname="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle missing Stripe signature header" name="/api/webhooks/stripe POST /api/webhooks/stripe Edge Cases should handle missing Stripe signature header" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Post Validation Schemas" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.065" tests="17">
    <testcase classname="Post Validation Schemas postPatchSchema should validate complete valid post patch data" name="Post Validation Schemas postPatchSchema should validate complete valid post patch data" time="0.001">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema should validate partial updates (all fields optional)" name="Post Validation Schemas postPatchSchema should validate partial updates (all fields optional)" time="0.001">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema title validation should accept valid titles" name="Post Validation Schemas postPatchSchema title validation should accept valid titles" time="0.001">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema title validation should reject titles that are too short" name="Post Validation Schemas postPatchSchema title validation should reject titles that are too short" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema title validation should reject titles that are too long" name="Post Validation Schemas postPatchSchema title validation should reject titles that are too long" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema title validation should reject non-string title values" name="Post Validation Schemas postPatchSchema title validation should reject non-string title values" time="0.001">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema content validation should accept any content type (z.any())" name="Post Validation Schemas postPatchSchema content validation should accept any content type (z.any())" time="0.001">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema content validation should handle complex Editor.js content structures" name="Post Validation Schemas postPatchSchema content validation should handle complex Editor.js content structures" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema edge cases should handle empty object" name="Post Validation Schemas postPatchSchema edge cases should handle empty object" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema edge cases should handle undefined values correctly" name="Post Validation Schemas postPatchSchema edge cases should handle undefined values correctly" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema edge cases should handle mixed valid and invalid fields" name="Post Validation Schemas postPatchSchema edge cases should handle mixed valid and invalid fields" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema edge cases should preserve content structure exactly" name="Post Validation Schemas postPatchSchema edge cases should preserve content structure exactly" time="0.001">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema type safety should accept various data types for content field" name="Post Validation Schemas postPatchSchema type safety should accept various data types for content field" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema type safety should reject invalid title types" name="Post Validation Schemas postPatchSchema type safety should reject invalid title types" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema real-world scenarios should handle typical blog post update" name="Post Validation Schemas postPatchSchema real-world scenarios should handle typical blog post update" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema real-world scenarios should handle title-only update" name="Post Validation Schemas postPatchSchema real-world scenarios should handle title-only update" time="0">
    </testcase>
    <testcase classname="Post Validation Schemas postPatchSchema real-world scenarios should handle content-only update" name="Post Validation Schemas postPatchSchema real-world scenarios should handle content-only update" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="/api/service-requests/[requestId]" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.058" tests="16">
    <testcase classname="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when user has no access to request" name="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when user has no access to request" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when no session exists" name="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when no session exists" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Authentication &amp; Authorization should allow access when user owns the request" name="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Authentication &amp; Authorization should allow access when user owns the request" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Data Retrieval should return service request with relations" name="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Data Retrieval should return service request with relations" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Data Retrieval should return 404 when request does not exist" name="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Data Retrieval should return 404 when request does not exist" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Error Handling should handle database errors gracefully" name="/api/service-requests/[requestId] GET /api/service-requests/[requestId] Error Handling should handle database errors gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when user has no access to request" name="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when user has no access to request" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Authentication &amp; Authorization should allow updates when user owns the request" name="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Authentication &amp; Authorization should allow updates when user owns the request" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Data Validation should validate update data with Zod schema" name="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Data Validation should validate update data with Zod schema" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Data Validation should handle date parsing correctly" name="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Data Validation should handle date parsing correctly" time="0.002">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Error Handling should handle database errors gracefully" name="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Error Handling should handle database errors gracefully" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Error Handling should handle malformed JSON gracefully" name="/api/service-requests/[requestId] PATCH /api/service-requests/[requestId] Error Handling should handle malformed JSON gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when user has no access to request" name="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Authentication &amp; Authorization should return 403 when user has no access to request" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Authentication &amp; Authorization should allow deletion when user owns the request" name="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Authentication &amp; Authorization should allow deletion when user owns the request" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Error Handling should handle database errors gracefully" name="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Error Handling should handle database errors gracefully" time="0">
    </testcase>
    <testcase classname="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Error Handling should handle invalid context parameters" name="/api/service-requests/[requestId] DELETE /api/service-requests/[requestId] Error Handling should handle invalid context parameters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="/api/users/[userId]/operator-application" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.152" tests="17">
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Authentication &amp; Authorization should return 403 when no session exists" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Authentication &amp; Authorization should return 403 when no session exists" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Authentication &amp; Authorization should return 403 when user tries to submit application for different user" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Authentication &amp; Authorization should return 403 when user tries to submit application for different user" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Authentication &amp; Authorization should allow user to submit their own operator application" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Authentication &amp; Authorization should allow user to submit their own operator application" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Data Validation should require location field" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Data Validation should require location field" time="0.002">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Data Validation should validate location is not empty" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Data Validation should validate location is not empty" time="0.009">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Data Validation should accept valid location" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Data Validation should accept valid location" time="0.002">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Business Logic should store location in preferredLocations array" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Business Logic should store location in preferredLocations array" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Business Logic should keep user role as USER (pending admin approval)" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Business Logic should keep user role as USER (pending admin approval)" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Business Logic should return success response with application data" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Business Logic should return success response with application data" time="0.003">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Route Context Validation should validate userId parameter" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Route Context Validation should validate userId parameter" time="0.002">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Route Context Validation should handle empty userId parameter" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Route Context Validation should handle empty userId parameter" time="0.007">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Error Handling should handle database errors gracefully" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Error Handling should handle database errors gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Error Handling should handle malformed JSON gracefully" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Error Handling should handle malformed JSON gracefully" time="0.003">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Error Handling should handle session retrieval errors" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Error Handling should handle session retrieval errors" time="0.012">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Edge Cases should handle locations with special characters" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Edge Cases should handle locations with special characters" time="0">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Edge Cases should handle very long location names" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Edge Cases should handle very long location names" time="0">
    </testcase>
    <testcase classname="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Edge Cases should handle locations with commas and special formatting" name="/api/users/[userId]/operator-application POST /api/users/[userId]/operator-application Edge Cases should handle locations with commas and special formatting" time="0">
    </testcase>
  </testsuite>
  <testsuite name="/api/service-requests" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.175" tests="18">
    <testcase classname="/api/service-requests GET /api/service-requests Authentication should return 401 when no session exists" name="/api/service-requests GET /api/service-requests Authentication should return 401 when no session exists" time="0.002">
    </testcase>
    <testcase classname="/api/service-requests GET /api/service-requests Role-based Access Control should return own requests for USER role" name="/api/service-requests GET /api/service-requests Role-based Access Control should return own requests for USER role" time="0.004">
    </testcase>
    <testcase classname="/api/service-requests GET /api/service-requests Role-based Access Control should return own + assigned requests for OPERATOR role" name="/api/service-requests GET /api/service-requests Role-based Access Control should return own + assigned requests for OPERATOR role" time="0">
    </testcase>
    <testcase classname="/api/service-requests GET /api/service-requests Role-based Access Control should return all requests for MANAGER role" name="/api/service-requests GET /api/service-requests Role-based Access Control should return all requests for MANAGER role" time="0">
    </testcase>
    <testcase classname="/api/service-requests GET /api/service-requests Role-based Access Control should return all requests for ADMIN role" name="/api/service-requests GET /api/service-requests Role-based Access Control should return all requests for ADMIN role" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests GET /api/service-requests Error Handling should handle database errors gracefully" name="/api/service-requests GET /api/service-requests Error Handling should handle database errors gracefully" time="0">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Authentication should return 401 when no session exists" name="/api/service-requests POST /api/service-requests Authentication should return 401 when no session exists" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Authorization should allow USER role to submit requests" name="/api/service-requests POST /api/service-requests Authorization should allow USER role to submit requests" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Authorization should allow OPERATOR role to submit requests" name="/api/service-requests POST /api/service-requests Authorization should allow OPERATOR role to submit requests" time="0">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Authorization should allow MANAGER role to submit requests" name="/api/service-requests POST /api/service-requests Authorization should allow MANAGER role to submit requests" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Authorization should allow ADMIN role to submit requests" name="/api/service-requests POST /api/service-requests Authorization should allow ADMIN role to submit requests" time="0">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Data Validation should validate required fields" name="/api/service-requests POST /api/service-requests Data Validation should validate required fields" time="0.02">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Data Validation should validate email format" name="/api/service-requests POST /api/service-requests Data Validation should validate email format" time="0">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Data Validation should validate date format" name="/api/service-requests POST /api/service-requests Data Validation should validate date format" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Business Logic should calculate total hours correctly" name="/api/service-requests POST /api/service-requests Business Logic should calculate total hours correctly" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Business Logic should set correct status and user ID" name="/api/service-requests POST /api/service-requests Business Logic should set correct status and user ID" time="0.002">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Error Handling should handle database errors gracefully" name="/api/service-requests POST /api/service-requests Error Handling should handle database errors gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/service-requests POST /api/service-requests Error Handling should handle malformed JSON gracefully" name="/api/service-requests POST /api/service-requests Error Handling should handle malformed JSON gracefully" time="0">
    </testcase>
  </testsuite>
  <testsuite name="/api/geocoding" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.164" tests="18">
    <testcase classname="/api/geocoding GET /api/geocoding Query Parameter Validation should return empty array when no query parameter" name="/api/geocoding GET /api/geocoding Query Parameter Validation should return empty array when no query parameter" time="0.006">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Query Parameter Validation should return empty array when query is too short" name="/api/geocoding GET /api/geocoding Query Parameter Validation should return empty array when query is too short" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Query Parameter Validation should return empty array when query is empty string" name="/api/geocoding GET /api/geocoding Query Parameter Validation should return empty array when query is empty string" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Query Parameter Validation should accept query with minimum 3 characters" name="/api/geocoding GET /api/geocoding Query Parameter Validation should accept query with minimum 3 characters" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Nominatim API Integration should proxy request to Nominatim with correct parameters" name="/api/geocoding GET /api/geocoding Nominatim API Integration should proxy request to Nominatim with correct parameters" time="0.009">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Nominatim API Integration should return sanitized geocoding results" name="/api/geocoding GET /api/geocoding Nominatim API Integration should return sanitized geocoding results" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Error Handling should return empty array when Nominatim API fails" name="/api/geocoding GET /api/geocoding Error Handling should return empty array when Nominatim API fails" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Error Handling should return empty array when fetch throws an error" name="/api/geocoding GET /api/geocoding Error Handling should return empty array when fetch throws an error" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Error Handling should return empty array when Nominatim returns invalid JSON" name="/api/geocoding GET /api/geocoding Error Handling should return empty array when Nominatim returns invalid JSON" time="0">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Response Headers should include proper content-type header" name="/api/geocoding GET /api/geocoding Response Headers should include proper content-type header" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Response Headers should include cache-control header for successful responses" name="/api/geocoding GET /api/geocoding Response Headers should include cache-control header for successful responses" time="0">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Response Headers should include content-type header for error responses" name="/api/geocoding GET /api/geocoding Response Headers should include content-type header for error responses" time="0.012">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Edge Cases should handle special characters in query" name="/api/geocoding GET /api/geocoding Edge Cases should handle special characters in query" time="0.022">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Edge Cases should handle very long query strings" name="/api/geocoding GET /api/geocoding Edge Cases should handle very long query strings" time="0.02">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Edge Cases should handle queries with multiple spaces" name="/api/geocoding GET /api/geocoding Edge Cases should handle queries with multiple spaces" time="0.002">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Edge Cases should handle empty Nominatim response array" name="/api/geocoding GET /api/geocoding Edge Cases should handle empty Nominatim response array" time="0.001">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Edge Cases should handle malformed Nominatim response objects" name="/api/geocoding GET /api/geocoding Edge Cases should handle malformed Nominatim response objects" time="0">
    </testcase>
    <testcase classname="/api/geocoding GET /api/geocoding Edge Cases should handle null/undefined query parameter gracefully" name="/api/geocoding GET /api/geocoding Edge Cases should handle null/undefined query parameter gracefully" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="/api/users/[userId]" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.105" tests="15">
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Authentication &amp; Authorization should return 403 when no session exists" name="/api/users/[userId] PATCH /api/users/[userId] Authentication &amp; Authorization should return 403 when no session exists" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Authentication &amp; Authorization should return 403 when user tries to update different user" name="/api/users/[userId] PATCH /api/users/[userId] Authentication &amp; Authorization should return 403 when user tries to update different user" time="0">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Authentication &amp; Authorization should allow user to update their own profile" name="/api/users/[userId] PATCH /api/users/[userId] Authentication &amp; Authorization should allow user to update their own profile" time="0.002">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Data Validation should validate name length (minimum 3 characters)" name="/api/users/[userId] PATCH /api/users/[userId] Data Validation should validate name length (minimum 3 characters)" time="0.003">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Data Validation should validate name length (maximum 32 characters)" name="/api/users/[userId] PATCH /api/users/[userId] Data Validation should validate name length (maximum 32 characters)" time="0.002">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Data Validation should accept valid name" name="/api/users/[userId] PATCH /api/users/[userId] Data Validation should accept valid name" time="0.002">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Data Validation should require name field" name="/api/users/[userId] PATCH /api/users/[userId] Data Validation should require name field" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Route Context Validation should validate userId parameter" name="/api/users/[userId] PATCH /api/users/[userId] Route Context Validation should validate userId parameter" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Route Context Validation should handle empty userId parameter" name="/api/users/[userId] PATCH /api/users/[userId] Route Context Validation should handle empty userId parameter" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Error Handling should handle database errors gracefully" name="/api/users/[userId] PATCH /api/users/[userId] Error Handling should handle database errors gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Error Handling should handle malformed JSON gracefully" name="/api/users/[userId] PATCH /api/users/[userId] Error Handling should handle malformed JSON gracefully" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Error Handling should handle session retrieval errors" name="/api/users/[userId] PATCH /api/users/[userId] Error Handling should handle session retrieval errors" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Edge Cases should handle special characters in name" name="/api/users/[userId] PATCH /api/users/[userId] Edge Cases should handle special characters in name" time="0">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Edge Cases should handle unicode characters in name" name="/api/users/[userId] PATCH /api/users/[userId] Edge Cases should handle unicode characters in name" time="0.001">
    </testcase>
    <testcase classname="/api/users/[userId] PATCH /api/users/[userId] Edge Cases should trim whitespace from name" name="/api/users/[userId] PATCH /api/users/[userId] Edge Cases should trim whitespace from name" time="0">
    </testcase>
  </testsuite>
  <testsuite name="User Validation Schemas" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.092" tests="25">
    <testcase classname="User Validation Schemas userNameSchema should validate valid names" name="User Validation Schemas userNameSchema should validate valid names" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userNameSchema should reject names that are too short" name="User Validation Schemas userNameSchema should reject names that are too short" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userNameSchema should reject names that are too long" name="User Validation Schemas userNameSchema should reject names that are too long" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userNameSchema should reject missing name field" name="User Validation Schemas userNameSchema should reject missing name field" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userNameSchema should reject non-string name values" name="User Validation Schemas userNameSchema should reject non-string name values" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas operatorApplicationSchema should validate valid location" name="User Validation Schemas operatorApplicationSchema should validate valid location" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas operatorApplicationSchema should reject empty location" name="User Validation Schemas operatorApplicationSchema should reject empty location" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas operatorApplicationSchema should reject missing location field" name="User Validation Schemas operatorApplicationSchema should reject missing location field" time="0">
    </testcase>
    <testcase classname="User Validation Schemas operatorApplicationSchema should reject non-string location values" name="User Validation Schemas operatorApplicationSchema should reject non-string location values" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema should validate complete valid update data" name="User Validation Schemas userUpdateSchema should validate complete valid update data" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema should validate partial update data (all fields optional)" name="User Validation Schemas userUpdateSchema should validate partial update data (all fields optional)" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema name validation should accept valid names" name="User Validation Schemas userUpdateSchema name validation should accept valid names" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema name validation should reject empty name" name="User Validation Schemas userUpdateSchema name validation should reject empty name" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema name validation should reject name exceeding 100 characters" name="User Validation Schemas userUpdateSchema name validation should reject name exceeding 100 characters" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema phone validation should accept valid phone numbers" name="User Validation Schemas userUpdateSchema phone validation should accept valid phone numbers" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema phone validation should reject phone numbers that are too short" name="User Validation Schemas userUpdateSchema phone validation should reject phone numbers that are too short" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema phone validation should reject phone numbers that are too long" name="User Validation Schemas userUpdateSchema phone validation should reject phone numbers that are too long" time="0.003">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema company validation should accept valid company names" name="User Validation Schemas userUpdateSchema company validation should accept valid company names" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema company validation should reject empty company name" name="User Validation Schemas userUpdateSchema company validation should reject empty company name" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema company validation should reject company name exceeding 100 characters" name="User Validation Schemas userUpdateSchema company validation should reject company name exceeding 100 characters" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema role validation should accept valid roles" name="User Validation Schemas userUpdateSchema role validation should accept valid roles" time="0.001">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema role validation should reject invalid roles" name="User Validation Schemas userUpdateSchema role validation should reject invalid roles" time="0.01">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema type safety should reject non-string values for string fields" name="User Validation Schemas userUpdateSchema type safety should reject non-string values for string fields" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema edge cases should handle undefined values correctly" name="User Validation Schemas userUpdateSchema edge cases should handle undefined values correctly" time="0">
    </testcase>
    <testcase classname="User Validation Schemas userUpdateSchema edge cases should handle mixed valid and invalid fields" name="User Validation Schemas userUpdateSchema edge cases should handle mixed valid and invalid fields" time="0">
    </testcase>
  </testsuite>
  <testsuite name="auth validations" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.117" tests="26">
    <testcase classname="auth validations userAuthSchema should validate valid email" name="auth validations userAuthSchema should validate valid email" time="0.002">
    </testcase>
    <testcase classname="auth validations userAuthSchema should reject invalid email format" name="auth validations userAuthSchema should reject invalid email format" time="0.001">
    </testcase>
    <testcase classname="auth validations userAuthSchema should reject missing email" name="auth validations userAuthSchema should reject missing email" time="0.001">
    </testcase>
    <testcase classname="auth validations userLoginSchema should validate valid login data" name="auth validations userLoginSchema should validate valid login data" time="0.001">
    </testcase>
    <testcase classname="auth validations userLoginSchema should reject invalid email in login" name="auth validations userLoginSchema should reject invalid email in login" time="0">
    </testcase>
    <testcase classname="auth validations userLoginSchema should reject empty password in login" name="auth validations userLoginSchema should reject empty password in login" time="0.001">
    </testcase>
    <testcase classname="auth validations userLoginSchema should reject missing fields in login" name="auth validations userLoginSchema should reject missing fields in login" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema should validate valid registration data" name="auth validations userRegisterSchema should validate valid registration data" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema name validation should reject name shorter than 2 characters" name="auth validations userRegisterSchema name validation should reject name shorter than 2 characters" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema name validation should accept name with 2 characters" name="auth validations userRegisterSchema name validation should accept name with 2 characters" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema name validation should reject missing name" name="auth validations userRegisterSchema name validation should reject missing name" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password shorter than 12 characters" name="auth validations userRegisterSchema password validation should reject password shorter than 12 characters" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password without uppercase letter" name="auth validations userRegisterSchema password validation should reject password without uppercase letter" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password without lowercase letter" name="auth validations userRegisterSchema password validation should reject password without lowercase letter" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password without number" name="auth validations userRegisterSchema password validation should reject password without number" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password without special character" name="auth validations userRegisterSchema password validation should reject password without special character" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password with common words" name="auth validations userRegisterSchema password validation should reject password with common words" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password with keyboard patterns" name="auth validations userRegisterSchema password validation should reject password with keyboard patterns" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should reject password with repeated characters" name="auth validations userRegisterSchema password validation should reject password with repeated characters" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password validation should accept strong password meeting all criteria" name="auth validations userRegisterSchema password validation should accept strong password meeting all criteria" time="0">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password confirmation should reject when passwords do not match" name="auth validations userRegisterSchema password confirmation should reject when passwords do not match" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema password confirmation should accept when passwords match exactly" name="auth validations userRegisterSchema password confirmation should accept when passwords match exactly" time="0.009">
    </testcase>
    <testcase classname="auth validations userRegisterSchema email validation in registration should reject invalid email formats" name="auth validations userRegisterSchema email validation in registration should reject invalid email formats" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema email validation in registration should accept valid email formats" name="auth validations userRegisterSchema email validation in registration should accept valid email formats" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema complete validation scenarios should provide detailed error messages for multiple validation failures" name="auth validations userRegisterSchema complete validation scenarios should provide detailed error messages for multiple validation failures" time="0.001">
    </testcase>
    <testcase classname="auth validations userRegisterSchema complete validation scenarios should handle missing required fields" name="auth validations userRegisterSchema complete validation scenarios should handle missing required fields" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Jest Setup" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.048" tests="2">
    <testcase classname="Jest Setup should be able to run tests" name="Jest Setup should be able to run tests" time="0.001">
    </testcase>
    <testcase classname="Jest Setup should have environment variables mocked" name="Jest Setup should have environment variables mocked" time="0">
    </testcase>
  </testsuite>
  <testsuite name="NextAuth configuration" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:33" time="0.067" tests="17">
    <testcase classname="NextAuth configuration authOptions configuration should have correct session strategy" name="NextAuth configuration authOptions configuration should have correct session strategy" time="0.001">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have correct pages configuration" name="NextAuth configuration authOptions configuration should have correct pages configuration" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have credentials provider configured" name="NextAuth configuration authOptions configuration should have credentials provider configured" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have proper cookie security settings" name="NextAuth configuration authOptions configuration should have proper cookie security settings" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have secure cookies in production" name="NextAuth configuration authOptions configuration should have secure cookies in production" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authOptions configuration should have debug enabled in development" name="NextAuth configuration authOptions configuration should have debug enabled in development" time="0">
    </testcase>
    <testcase classname="NextAuth configuration provider configuration should have credentials provider with correct name" name="NextAuth configuration provider configuration should have credentials provider with correct name" time="0">
    </testcase>
    <testcase classname="NextAuth configuration provider configuration should have email and password credentials configured" name="NextAuth configuration provider configuration should have email and password credentials configured" time="0.001">
    </testcase>
    <testcase classname="NextAuth configuration provider configuration should have authorize function defined" name="NextAuth configuration provider configuration should have authorize function defined" time="0">
    </testcase>
    <testcase classname="NextAuth configuration callbacks configuration should have JWT callback defined" name="NextAuth configuration callbacks configuration should have JWT callback defined" time="0">
    </testcase>
    <testcase classname="NextAuth configuration callbacks configuration should have session callback defined" name="NextAuth configuration callbacks configuration should have session callback defined" time="0">
    </testcase>
    <testcase classname="NextAuth configuration session callback functionality should return session with user data from token" name="NextAuth configuration session callback functionality should return session with user data from token" time="0">
    </testcase>
    <testcase classname="NextAuth configuration session callback functionality should handle missing token data gracefully" name="NextAuth configuration session callback functionality should handle missing token data gracefully" time="0">
    </testcase>
    <testcase classname="NextAuth configuration session callback functionality should preserve session structure" name="NextAuth configuration session callback functionality should preserve session structure" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authorize function basic validation should return null for missing credentials" name="NextAuth configuration authorize function basic validation should return null for missing credentials" time="0.001">
    </testcase>
    <testcase classname="NextAuth configuration authorize function basic validation should return null for missing email" name="NextAuth configuration authorize function basic validation should return null for missing email" time="0">
    </testcase>
    <testcase classname="NextAuth configuration authorize function basic validation should return null for missing password" name="NextAuth configuration authorize function basic validation should return null for missing password" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ServiceRequestOperations" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="3.081" tests="29">
    <testcase classname="ServiceRequestOperations Component Rendering should render the operations dropdown menu" name="ServiceRequestOperations Component Rendering should render the operations dropdown menu" time="0.091">
    </testcase>
    <testcase classname="ServiceRequestOperations Component Rendering should show menu items when dropdown is opened" name="ServiceRequestOperations Component Rendering should show menu items when dropdown is opened" time="0.09">
    </testcase>
    <testcase classname="ServiceRequestOperations Component Rendering should have correct navigation links" name="ServiceRequestOperations Component Rendering should have correct navigation links" time="0.044">
    </testcase>
    <testcase classname="ServiceRequestOperations Component Rendering should show delete option with destructive styling" name="ServiceRequestOperations Component Rendering should show delete option with destructive styling" time="0.033">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Confirmation Dialog should show delete confirmation dialog when delete is clicked" name="ServiceRequestOperations Delete Confirmation Dialog should show delete confirmation dialog when delete is clicked" time="0.115">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Confirmation Dialog should show cancel and delete buttons in dialog" name="ServiceRequestOperations Delete Confirmation Dialog should show cancel and delete buttons in dialog" time="0.197">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Confirmation Dialog should close dialog when cancel is clicked" name="ServiceRequestOperations Delete Confirmation Dialog should close dialog when cancel is clicked" time="0.152">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Confirmation Dialog should include service request title in confirmation message" name="ServiceRequestOperations Delete Confirmation Dialog should include service request title in confirmation message" time="0.118">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Functionality should successfully delete service request" name="ServiceRequestOperations Delete Functionality should successfully delete service request" time="0.201">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Functionality should show loading state during deletion" name="ServiceRequestOperations Delete Functionality should show loading state during deletion" time="0.159">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Functionality should show success toast and refresh on successful deletion" name="ServiceRequestOperations Delete Functionality should show success toast and refresh on successful deletion" time="0.121">
    </testcase>
    <testcase classname="ServiceRequestOperations Delete Functionality should close dialog on successful deletion" name="ServiceRequestOperations Delete Functionality should close dialog on successful deletion" time="0.134">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should show error toast for 403 unauthorized" name="ServiceRequestOperations Error Handling should show error toast for 403 unauthorized" time="0.092">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should show error toast for 404 not found" name="ServiceRequestOperations Error Handling should show error toast for 404 not found" time="0.083">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should show error toast for 500 server error" name="ServiceRequestOperations Error Handling should show error toast for 500 server error" time="0.087">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should show generic error toast for other HTTP errors" name="ServiceRequestOperations Error Handling should show generic error toast for other HTTP errors" time="0.082">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should show network error toast for fetch failures" name="ServiceRequestOperations Error Handling should show network error toast for fetch failures" time="0.085">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should not close dialog on error" name="ServiceRequestOperations Error Handling should not close dialog on error" time="0.096">
    </testcase>
    <testcase classname="ServiceRequestOperations Error Handling should not refresh router on error" name="ServiceRequestOperations Error Handling should not refresh router on error" time="0.073">
    </testcase>
    <testcase classname="ServiceRequestOperations Loading States should show trash icon when not loading" name="ServiceRequestOperations Loading States should show trash icon when not loading" time="0.055">
    </testcase>
    <testcase classname="ServiceRequestOperations Loading States should switch to spinner during loading" name="ServiceRequestOperations Loading States should switch to spinner during loading" time="0.065">
    </testcase>
    <testcase classname="ServiceRequestOperations Loading States should reset loading state after error" name="ServiceRequestOperations Loading States should reset loading state after error" time="0.063">
    </testcase>
    <testcase classname="ServiceRequestOperations Accessibility should have proper ARIA labels and roles" name="ServiceRequestOperations Accessibility should have proper ARIA labels and roles" time="0.003">
    </testcase>
    <testcase classname="ServiceRequestOperations Accessibility should handle keyboard navigation" name="ServiceRequestOperations Accessibility should handle keyboard navigation" time="0.016">
    </testcase>
    <testcase classname="ServiceRequestOperations Accessibility should maintain focus management in dialog" name="ServiceRequestOperations Accessibility should maintain focus management in dialog" time="0.035">
    </testcase>
    <testcase classname="ServiceRequestOperations Edge Cases should handle service request with special characters in title" name="ServiceRequestOperations Edge Cases should handle service request with special characters in title" time="0.046">
    </testcase>
    <testcase classname="ServiceRequestOperations Edge Cases should handle very long service request titles" name="ServiceRequestOperations Edge Cases should handle very long service request titles" time="0.039">
    </testcase>
    <testcase classname="ServiceRequestOperations Edge Cases should handle empty service request title" name="ServiceRequestOperations Edge Cases should handle empty service request title" time="0.035">
    </testcase>
    <testcase classname="ServiceRequestOperations Edge Cases should prevent event default on delete button click" name="ServiceRequestOperations Edge Cases should prevent event default on delete button click" time="0.107">
    </testcase>
  </testsuite>
  <testsuite name="UserAuthForm" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="3.122" tests="21">
    <testcase classname="UserAuthForm Login Mode should render login form by default" name="UserAuthForm Login Mode should render login form by default" time="0.136">
    </testcase>
    <testcase classname="UserAuthForm Login Mode should handle successful login" name="UserAuthForm Login Mode should handle successful login" time="0.147">
    </testcase>
    <testcase classname="UserAuthForm Login Mode should handle login error" name="UserAuthForm Login Mode should handle login error" time="0.115">
    </testcase>
    <testcase classname="UserAuthForm Login Mode should validate required fields in login" name="UserAuthForm Login Mode should validate required fields in login" time="0.048">
    </testcase>
    <testcase classname="UserAuthForm Login Mode should validate email format in login" name="UserAuthForm Login Mode should validate email format in login" time="0.298">
    </testcase>
    <testcase classname="UserAuthForm Login Mode should validate password requirement in login" name="UserAuthForm Login Mode should validate password requirement in login" time="0.103">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should render registration form" name="UserAuthForm Register Mode should render registration form" time="0.009">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should handle successful registration and auto-login" name="UserAuthForm Register Mode should handle successful registration and auto-login" time="0.406">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should handle registration failure" name="UserAuthForm Register Mode should handle registration failure" time="0.249">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should handle auto-login failure after successful registration" name="UserAuthForm Register Mode should handle auto-login failure after successful registration" time="0.174">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should validate all required fields in registration" name="UserAuthForm Register Mode should validate all required fields in registration" time="0.025">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should validate password strength in registration" name="UserAuthForm Register Mode should validate password strength in registration" time="0.121">
    </testcase>
    <testcase classname="UserAuthForm Register Mode should validate password confirmation match" name="UserAuthForm Register Mode should validate password confirmation match" time="0.185">
    </testcase>
    <testcase classname="UserAuthForm Loading States should show loading state during login" name="UserAuthForm Loading States should show loading state during login" time="0.083">
    </testcase>
    <testcase classname="UserAuthForm Loading States should show loading state during registration" name="UserAuthForm Loading States should show loading state during registration" time="0.145">
    </testcase>
    <testcase classname="UserAuthForm Loading States should disable form fields during loading" name="UserAuthForm Loading States should disable form fields during loading" time="0.078">
    </testcase>
    <testcase classname="UserAuthForm Accessibility should have proper form labels" name="UserAuthForm Accessibility should have proper form labels" time="0.006">
    </testcase>
    <testcase classname="UserAuthForm Accessibility should show error messages for form validation" name="UserAuthForm Accessibility should show error messages for form validation" time="0.015">
    </testcase>
    <testcase classname="UserAuthForm Accessibility should have proper button text for each mode" name="UserAuthForm Accessibility should have proper button text for each mode" time="0.009">
    </testcase>
    <testcase classname="UserAuthForm Email Normalization should normalize email to lowercase in login" name="UserAuthForm Email Normalization should normalize email to lowercase in login" time="0.072">
    </testcase>
    <testcase classname="UserAuthForm Email Normalization should send email as entered in registration (normalization happens server-side)" name="UserAuthForm Email Normalization should send email as entered in registration (normalization happens server-side)" time="0.189">
    </testcase>
  </testsuite>
  <testsuite name="OperatorApplicationForm" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="5.34" tests="29">
    <testcase classname="OperatorApplicationForm Form Rendering should render the operator application form" name="OperatorApplicationForm Form Rendering should render the operator application form" time="0.131">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Rendering should have proper form structure and accessibility" name="OperatorApplicationForm Form Rendering should have proper form structure and accessibility" time="0.025">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Rendering should render with custom className" name="OperatorApplicationForm Form Rendering should render with custom className" time="0.011">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should not search for addresses with less than 3 characters" name="OperatorApplicationForm Address Autocomplete should not search for addresses with less than 3 characters" time="0.037">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should search for addresses when typing 3 or more characters" name="OperatorApplicationForm Address Autocomplete should search for addresses when typing 3 or more characters" time="0.353">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should display address suggestions" name="OperatorApplicationForm Address Autocomplete should display address suggestions" time="0.357">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should select an address from suggestions" name="OperatorApplicationForm Address Autocomplete should select an address from suggestions" time="0.402">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should show loading spinner during address search" name="OperatorApplicationForm Address Autocomplete should show loading spinner during address search" time="0.351">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should handle geocoding API errors gracefully" name="OperatorApplicationForm Address Autocomplete should handle geocoding API errors gracefully" time="0.049">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should debounce address searches" name="OperatorApplicationForm Address Autocomplete should debounce address searches" time="0.491">
    </testcase>
    <testcase classname="OperatorApplicationForm Address Autocomplete should hide suggestions on input blur" name="OperatorApplicationForm Address Autocomplete should hide suggestions on input blur" time="0.283">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Validation should show validation error for empty location" name="OperatorApplicationForm Form Validation should show validation error for empty location" time="0.03">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Validation should not submit form with invalid data" name="OperatorApplicationForm Form Validation should not submit form with invalid data" time="0.021">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Validation should validate location field correctly" name="OperatorApplicationForm Form Validation should validate location field correctly" time="0.062">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Submission should submit form with valid data" name="OperatorApplicationForm Form Submission should submit form with valid data" time="0.063">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Submission should show loading state during submission" name="OperatorApplicationForm Form Submission should show loading state during submission" time="0.054">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Submission should show success toast on successful submission" name="OperatorApplicationForm Form Submission should show success toast on successful submission" time="0.047">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Submission should refresh router on successful submission" name="OperatorApplicationForm Form Submission should refresh router on successful submission" time="0.05">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Submission should show error toast on submission failure" name="OperatorApplicationForm Form Submission should show error toast on submission failure" time="0.046">
    </testcase>
    <testcase classname="OperatorApplicationForm Form Submission should not refresh router on submission failure" name="OperatorApplicationForm Form Submission should not refresh router on submission failure" time="0.044">
    </testcase>
    <testcase classname="OperatorApplicationForm Edge Cases should handle special characters in location" name="OperatorApplicationForm Edge Cases should handle special characters in location" time="0.059">
    </testcase>
    <testcase classname="OperatorApplicationForm Edge Cases should handle very long location names" name="OperatorApplicationForm Edge Cases should handle very long location names" time="0.84">
    </testcase>
    <testcase classname="OperatorApplicationForm Edge Cases should handle empty geocoding response" name="OperatorApplicationForm Edge Cases should handle empty geocoding response" time="0.302">
    </testcase>
    <testcase classname="OperatorApplicationForm Edge Cases should handle malformed geocoding response" name="OperatorApplicationForm Edge Cases should handle malformed geocoding response" time="0.022">
    </testcase>
    <testcase classname="OperatorApplicationForm User Interaction should clear suggestions when an address is selected" name="OperatorApplicationForm User Interaction should clear suggestions when an address is selected" time="0.324">
    </testcase>
    <testcase classname="OperatorApplicationForm User Interaction should handle keyboard navigation in suggestions" name="OperatorApplicationForm User Interaction should handle keyboard navigation in suggestions" time="0.325">
    </testcase>
    <testcase classname="OperatorApplicationForm User Interaction should update input value when typing" name="OperatorApplicationForm User Interaction should update input value when typing" time="0.039">
    </testcase>
    <testcase classname="OperatorApplicationForm Component Props should accept and use custom props" name="OperatorApplicationForm Component Props should accept and use custom props" time="0.002">
    </testcase>
    <testcase classname="OperatorApplicationForm Component Props should work with different user objects" name="OperatorApplicationForm Component Props should work with different user objects" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="auth-utils" errors="0" failures="0" skipped="0" timestamp="2025-09-23T12:26:31" time="9.829" tests="14">
    <testcase classname="auth-utils hashPassword should hash a password successfully" name="auth-utils hashPassword should hash a password successfully" time="0.476">
    </testcase>
    <testcase classname="auth-utils hashPassword should generate different hashes for the same password (salt randomization)" name="auth-utils hashPassword should generate different hashes for the same password (salt randomization)" time="1.159">
    </testcase>
    <testcase classname="auth-utils hashPassword should handle empty password" name="auth-utils hashPassword should handle empty password" time="0.349">
    </testcase>
    <testcase classname="auth-utils hashPassword should handle very long passwords" name="auth-utils hashPassword should handle very long passwords" time="0.346">
    </testcase>
    <testcase classname="auth-utils hashPassword should handle special characters in password" name="auth-utils hashPassword should handle special characters in password" time="0.333">
    </testcase>
    <testcase classname="auth-utils verifyPassword should verify correct password against hash" name="auth-utils verifyPassword should verify correct password against hash" time="0.652">
    </testcase>
    <testcase classname="auth-utils verifyPassword should reject incorrect password against hash" name="auth-utils verifyPassword should reject incorrect password against hash" time="0.957">
    </testcase>
    <testcase classname="auth-utils verifyPassword should reject empty password against valid hash" name="auth-utils verifyPassword should reject empty password against valid hash" time="0.548">
    </testcase>
    <testcase classname="auth-utils verifyPassword should reject password against empty hash" name="auth-utils verifyPassword should reject password against empty hash" time="0">
    </testcase>
    <testcase classname="auth-utils verifyPassword should reject password against invalid hash format" name="auth-utils verifyPassword should reject password against invalid hash format" time="0">
    </testcase>
    <testcase classname="auth-utils verifyPassword should handle case sensitivity correctly" name="auth-utils verifyPassword should handle case sensitivity correctly" time="0.825">
    </testcase>
    <testcase classname="auth-utils verifyPassword should handle unicode characters" name="auth-utils verifyPassword should handle unicode characters" time="0.573">
    </testcase>
    <testcase classname="auth-utils integration tests should maintain consistency across multiple hash/verify cycles" name="auth-utils integration tests should maintain consistency across multiple hash/verify cycles" time="2.23">
    </testcase>
    <testcase classname="auth-utils integration tests should reject cross-password verification" name="auth-utils integration tests should reject cross-password verification" time="1.086">
    </testcase>
  </testsuite>
</testsuites>
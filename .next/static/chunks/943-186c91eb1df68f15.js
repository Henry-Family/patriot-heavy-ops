"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[943],{5943:function(e,t,r){r.d(t,{aU:function(){return em},$j:function(){return ev},VY:function(){return eD},dk:function(){return eh},aV:function(){return eg},h_:function(){return ep},fC:function(){return ec},Dx:function(){return ey},xz:function(){return ef}});var n=r(2265),o=r(6989),a=r(2210),i=r(5744),l=r(966),s=r(3763),u=r(9249),d=r(2759),c=r(2730),f=r(5606),p=r(9790),g=r(1244),D=r(3386),m=r(5859),v=r(7256),y=r(7437),h="Dialog",[j,x]=(0,o.b)(h),[b,R]=j(h),Dialog=e=>{let{__scopeDialog:t,children:r,open:o,defaultOpen:a,onOpenChange:i,modal:u=!0}=e,d=n.useRef(null),c=n.useRef(null),[f,p]=(0,s.T)({prop:o,defaultProp:a??!1,onChange:i,caller:h});return(0,y.jsx)(b,{scope:t,triggerRef:d,contentRef:c,contentId:(0,l.M)(),titleId:(0,l.M)(),descriptionId:(0,l.M)(),open:f,onOpenChange:p,onOpenToggle:n.useCallback(()=>p(e=>!e),[p]),modal:u,children:r})};Dialog.displayName=h;var w="DialogTrigger",A=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=R(w,r),l=(0,a.e)(t,o.triggerRef);return(0,y.jsx)(p.WV.button,{type:"button","aria-haspopup":"dialog","aria-expanded":o.open,"aria-controls":o.contentId,"data-state":getState(o.open),...n,ref:l,onClick:(0,i.Mj)(e.onClick,o.onOpenToggle)})});A.displayName=w;var N="DialogPortal",[C,I]=j(N,{forceMount:void 0}),DialogPortal=e=>{let{__scopeDialog:t,forceMount:r,children:o,container:a}=e,i=R(N,t);return(0,y.jsx)(C,{scope:t,forceMount:r,children:n.Children.map(o,e=>(0,y.jsx)(f.z,{present:r||i.open,children:(0,y.jsx)(c.h,{asChild:!0,container:a,children:e})}))})};DialogPortal.displayName=N;var O="DialogOverlay",_=n.forwardRef((e,t)=>{let r=I(O,e.__scopeDialog),{forceMount:n=r.forceMount,...o}=e,a=R(O,e.__scopeDialog);return a.modal?(0,y.jsx)(f.z,{present:n||a.open,children:(0,y.jsx)(E,{...o,ref:t})}):null});_.displayName=O;var P=(0,v.Z8)("DialogOverlay.RemoveScroll"),E=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=R(O,r);return(0,y.jsx)(D.Z,{as:P,allowPinchZoom:!0,shards:[o.contentRef],children:(0,y.jsx)(p.WV.div,{"data-state":getState(o.open),...n,ref:t,style:{pointerEvents:"auto",...n.style}})})}),F="DialogContent",M=n.forwardRef((e,t)=>{let r=I(F,e.__scopeDialog),{forceMount:n=r.forceMount,...o}=e,a=R(F,e.__scopeDialog);return(0,y.jsx)(f.z,{present:n||a.open,children:a.modal?(0,y.jsx)(W,{...o,ref:t}):(0,y.jsx)(k,{...o,ref:t})})});M.displayName=F;var W=n.forwardRef((e,t)=>{let r=R(F,e.__scopeDialog),o=n.useRef(null),l=(0,a.e)(t,r.contentRef,o);return n.useEffect(()=>{let e=o.current;if(e)return(0,m.Ry)(e)},[]),(0,y.jsx)(T,{...e,ref:l,trapFocus:r.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:(0,i.Mj)(e.onCloseAutoFocus,e=>{e.preventDefault(),r.triggerRef.current?.focus()}),onPointerDownOutside:(0,i.Mj)(e.onPointerDownOutside,e=>{let t=e.detail.originalEvent,r=0===t.button&&!0===t.ctrlKey,n=2===t.button||r;n&&e.preventDefault()}),onFocusOutside:(0,i.Mj)(e.onFocusOutside,e=>e.preventDefault())})}),k=n.forwardRef((e,t)=>{let r=R(F,e.__scopeDialog),o=n.useRef(!1),a=n.useRef(!1);return(0,y.jsx)(T,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{e.onCloseAutoFocus?.(t),t.defaultPrevented||(o.current||r.triggerRef.current?.focus(),t.preventDefault()),o.current=!1,a.current=!1},onInteractOutside:t=>{e.onInteractOutside?.(t),t.defaultPrevented||(o.current=!0,"pointerdown"!==t.detail.originalEvent.type||(a.current=!0));let n=t.target,i=r.triggerRef.current?.contains(n);i&&t.preventDefault(),"focusin"===t.detail.originalEvent.type&&a.current&&t.preventDefault()}})}),T=n.forwardRef((e,t)=>{let{__scopeDialog:r,trapFocus:o,onOpenAutoFocus:i,onCloseAutoFocus:l,...s}=e,c=R(F,r),f=n.useRef(null),p=(0,a.e)(t,f);return(0,g.EW)(),(0,y.jsxs)(y.Fragment,{children:[(0,y.jsx)(d.M,{asChild:!0,loop:!0,trapped:o,onMountAutoFocus:i,onUnmountAutoFocus:l,children:(0,y.jsx)(u.XB,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":getState(c.open),...s,ref:p,onDismiss:()=>c.onOpenChange(!1)})}),(0,y.jsxs)(y.Fragment,{children:[(0,y.jsx)(TitleWarning,{titleId:c.titleId}),(0,y.jsx)(DescriptionWarning,{contentRef:f,descriptionId:c.descriptionId})]})]})}),$="DialogTitle",S=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=R($,r);return(0,y.jsx)(p.WV.h2,{id:o.titleId,...n,ref:t})});S.displayName=$;var V="DialogDescription",z=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=R(V,r);return(0,y.jsx)(p.WV.p,{id:o.descriptionId,...n,ref:t})});z.displayName=V;var B="DialogClose",Z=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=R(B,r);return(0,y.jsx)(p.WV.button,{type:"button",...n,ref:t,onClick:(0,i.Mj)(e.onClick,()=>o.onOpenChange(!1))})});function getState(e){return e?"open":"closed"}Z.displayName=B;var q="DialogTitleWarning",[U,Y]=(0,o.k)(q,{contentName:F,titleName:$,docsSlug:"dialog"}),TitleWarning=({titleId:e})=>{let t=Y(q),r=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return n.useEffect(()=>{if(e){let t=document.getElementById(e);t||console.error(r)}},[r,e]),null},DescriptionWarning=({contentRef:e,descriptionId:t})=>{let r=Y("DialogDescriptionWarning"),o=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${r.contentName}}.`;return n.useEffect(()=>{let r=e.current?.getAttribute("aria-describedby");if(t&&r){let e=document.getElementById(t);e||console.warn(o)}},[o,e,t]),null},H="AlertDialog",[K,X]=(0,o.b)(H,[x]),G=x(),AlertDialog=e=>{let{__scopeAlertDialog:t,...r}=e,n=G(t);return(0,y.jsx)(Dialog,{...n,...r,modal:!0})};AlertDialog.displayName=H;var J=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=G(r);return(0,y.jsx)(A,{...o,...n,ref:t})});J.displayName="AlertDialogTrigger";var AlertDialogPortal=e=>{let{__scopeAlertDialog:t,...r}=e,n=G(t);return(0,y.jsx)(DialogPortal,{...n,...r})};AlertDialogPortal.displayName="AlertDialogPortal";var L=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=G(r);return(0,y.jsx)(_,{...o,...n,ref:t})});L.displayName="AlertDialogOverlay";var Q="AlertDialogContent",[ee,et]=K(Q),er=(0,v.sA)("AlertDialogContent"),en=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,children:o,...l}=e,s=G(r),u=n.useRef(null),d=(0,a.e)(t,u),c=n.useRef(null);return(0,y.jsx)(U,{contentName:Q,titleName:eo,docsSlug:"alert-dialog",children:(0,y.jsx)(ee,{scope:r,cancelRef:c,children:(0,y.jsxs)(M,{role:"alertdialog",...s,...l,ref:d,onOpenAutoFocus:(0,i.Mj)(l.onOpenAutoFocus,e=>{e.preventDefault(),c.current?.focus({preventScroll:!0})}),onPointerDownOutside:e=>e.preventDefault(),onInteractOutside:e=>e.preventDefault(),children:[(0,y.jsx)(er,{children:o}),(0,y.jsx)(dist_DescriptionWarning,{contentRef:u})]})})})});en.displayName=Q;var eo="AlertDialogTitle",ea=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=G(r);return(0,y.jsx)(S,{...o,...n,ref:t})});ea.displayName=eo;var ei="AlertDialogDescription",el=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=G(r);return(0,y.jsx)(z,{...o,...n,ref:t})});el.displayName=ei;var es=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=G(r);return(0,y.jsx)(Z,{...o,...n,ref:t})});es.displayName="AlertDialogAction";var eu="AlertDialogCancel",ed=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,{cancelRef:o}=et(eu,r),i=G(r),l=(0,a.e)(t,o);return(0,y.jsx)(Z,{...i,...n,ref:l})});ed.displayName=eu;var dist_DescriptionWarning=({contentRef:e})=>{let t=`\`${Q}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${Q}\` by passing a \`${ei}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${Q}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return n.useEffect(()=>{let r=document.getElementById(e.current?.getAttribute("aria-describedby"));r||console.warn(t)},[t,e]),null},ec=AlertDialog,ef=J,ep=AlertDialogPortal,eg=L,eD=en,em=es,ev=ed,ey=ea,eh=el}}]);
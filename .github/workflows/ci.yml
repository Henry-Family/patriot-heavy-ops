name: CI/CD Pipeline

on:
  push:
    branches: [main]
    
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup test environment
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test" > .env.local
          echo "NEXTAUTH_SECRET=ci-test-secret" >> .env.local
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local
          echo "NEXT_PUBLIC_APP_URL=http://localhost:3000" >> .env.local

      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test

      - name: Run TypeScript check
        run: npx tsc --noEmit
        env:
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Run ESLint
        run: npm run lint
        env:
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Run tests with coverage
        run: npm run test:ci
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          NEXTAUTH_SECRET: ci-test-secret
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Upload coverage to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: coverage/lcov.info

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          NEXTAUTH_SECRET: ci-test-secret
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_APP_URL: http://localhost:3000

  integration:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Start services with Docker
        run: docker compose up -d

      - name: Wait for services
        run: sleep 30

      - name: Run integration tests
        run: npm run test:integration || echo "Integration tests not yet implemented"

      - name: Stop services
        run: docker compose down
